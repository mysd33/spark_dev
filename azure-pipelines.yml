# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  IVY_CACHE_FOLDER: $(Pipeline.Workspace)/.ivy2/
  SBT_IVY_OPTION: "--ivy $(IVY_CACHE_FOLDER)"

steps:
- task: Cache@2
  inputs:
    key: 'sbt | "$(Agent.OS)" | **/build.sbt'
    restoreKeys: |
      sbt | "$(Agent.OS)
      sbt
    path: $(IVY_CACHE_FOLDER)
  displayName: sbt build cache

- script: |
    echo build
    sbt $(SBT_IVY_OPTION) clean package
  displayName: Build

- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'SonarQube'
    scannerMode: 'CLI'
    configMode: 'file'
    configFile: $(System.DefaultWorkingDirectory)/sonar-project.properties

- script: |
    echo scaladoc
    sbt $(SBT_IVY_OPTION) doc
  displayName: Create API Document

- script: |
    echo test
    sbt $(SBT_IVY_OPTION) -Dactive.profile=ut coverage test
  displayName: Unit Test

- script: |
    echo test
    sbt $(SBT_IVY_OPTION) -Dactive.profile=it it:test
  displayName: Integration Test

##https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-test-results?view=azure-devops
- task: PublishTestResults@2

- script: |
    echo coverageReport
    sbt $(SBT_IVY_OPTION) coverageReport coverageAggregate
  displayName: Create Coverage Report

##https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-code-coverage-results?view=azure-devops
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: "cobertura"
    summaryFileLocation: "$(System.DefaultWorkingDirectory)/target/**/coverage-report/cobertura.xml"
  displayName: Publish Code Coverage Results

- task: SonarQubeAnalyze@4

- script: |
    echo assembly
    sbt $(SBT_IVY_OPTION) assembly
  displayName: Create Assembly